num randPrecision = 100;
num goldenAngle = 2.39996;
num pi = 3.14159;

block(0, -3, 0, "minecraft:stripped_crimson_hyphae", false);
block(1, -3, 0, "minecraft:stripped_crimson_hyphae", false);
block(-1, -3, 0, "minecraft:stripped_crimson_hyphae", false);
block(0, -3, 1, "minecraft:stripped_crimson_hyphae", false);
block(0, -3, -1, "minecraft:stripped_crimson_hyphae", false);

block(2, -3, 0, "minecraft:pearlescent_froglight", false);
block(-2, -3, 0, "minecraft:pearlescent_froglight", false);
block(0, -3, 2, "minecraft:pearlescent_froglight", false);
block(0, -3, -2, "minecraft:pearlescent_froglight", false);
block(0, -1, 0, "minecraft:pearlescent_froglight", false);

num leafRadius = 3;

for(num lx = -leafRadius; lx <= leafRadius; lx = lx + 1) {
    for(num ly = -leafRadius; ly <= leafRadius; ly = ly + 1) {
        for(num lz = -leafRadius; lz <= leafRadius; lz = lz + 1) {
            if (pow(lx,2)+pow(ly,2)+pow(lz,2) < pow(leafRadius,2)) {
                if (getBlock(lx, ly - leafRadius, lz) == "minecraft:air") {
                    block(lx, ly - leafRadius, lz, "minecraft:oak_leaves[distance=1,persistent=false]", false);
                }
            }
        }
    }
}

num amount = 10;

num radius = 1;

num yTranslate = -5;

str mainBlock = "minecraft:stripped_crimson_hyphae";
str altBlock = mainBlock;

str setBlock = "";
for (num a = 0; a < amount; a = a + 1) {

    num length = 5;
    
    num droop = -0.03;
    num verticalDirection = -0.5-randomInt(randPrecision)/randPrecision;
    num angle = randomInt(randPrecision)/randPrecision*2*pi;

    // Branch direction vector
    num dx = sin(angle);
    num dy = verticalDirection;
    num dz = cos(angle);
    // Normalize vector
    num mag = sqrt(pow(dx,2)+pow(dy,2)+pow(dz,2));
    dx = dx/mag;
    dy = dy/mag;
    dz = dz/mag;

    for (num l = 0; l <= length; l = l + 0.1) {

        num cx = l*dx;
        num cy = l*dy;
        num cz = l*dz;
        
        num r = radius;
        for(num x = -r; x <= r; x = x + 1) {
            for(num y = -r; y <= r; y = y + 1) {
                for(num z = -r; z <= r; z = z + 1) {
                    setBlock = mainBlock;
                    if (randomInt(2) == 0) setBlock = altBlock;
                    if (pow(x,2)+pow(y,2)+pow(z,2) < pow(r,2)) {
                    block(cx, cy+yTranslate, cz, setBlock, false);                  
                    }
                }  
            }
        }

        // Point vector down more
        dy = dy - droop;
        // Normalize vector
        mag = sqrt(pow2(dx)+pow2(dy)+pow2(dz));
        dx = dx/mag;
        dy = dy/mag;
        dz = dz/mag;
    }

    angle = angle + goldenAngle;
}