if (true) {
    if (getBlock(2,-2,0) == "minecraft:air") fail;
    if (getBlock(-2,-2,0) == "minecraft:air") fail;
    if (getBlock(0,-2,2) == "minecraft:air") fail;
    if (getBlock(0,-2,-2) == "minecraft:air") fail;
}


num randPrecision = 100;
num goldenAngle = 2.39996;
num pi = 3.14159;

num height = 150+randomInt(200);
num additionalSize = randomInt(10);

num radius = 1;

str mainBlock = "minecraft:white_terracotta";
str altBlock = "minecraft:light_gray_terracotta";

num angle = randomInt(randPrecision)/randPrecision*2*pi;

str setBlock = "";
for (num a = 0; a < height; a = a + 1) {
    
    num yTranslate = a/6;
    num length = 20-(a/(height/15));
    
    num droop = -0.01-(a/(height*100));
    num verticalDirection = -2+randomInt(randPrecision)/randPrecision;


    // Branch direction vector
    num dx = sin(angle);
    num dy = verticalDirection;
    num dz = cos(angle);
    // Normalize vector
    num mag = sqrt(pow(dx,2)+pow(dy,2)+pow(dz,2));
    dx = dx/mag;
    dy = dy/mag;
    dz = dz/mag;

    for (num l = 0; l <= length; l = l + 0.1) {

        num r = (radius/length * -l/2) + radius;

        num cx = l*dx;
        num cy = l*dy;
        num cz = l*dz;
        
        for(num x = -r; x <= r; x = x + 1) {
            for(num y = -r; y <= r; y = y + 1) {
                for(num z = -r; z <= r; z = z + 1) {
                    setBlock = mainBlock;
                    if (randomInt(2) == 0) setBlock = altBlock;
                        
                    if (pow(x,2)+pow(y,2)+pow(z,2) < pow(r,2)) {
                        block(cx + x, cy + yTranslate, cz + z, setBlock, true);
                    }
                }  
            }
        }

        // Point vector down more
        dy = dy - droop;
        // Normalize vector
        mag = sqrt(pow2(dx)+pow2(dy)+pow2(dz));
        dx = dx/mag;
        dy = dy/mag;
        dz = dz/mag;
    }

    angle = angle + 0.1;
}


