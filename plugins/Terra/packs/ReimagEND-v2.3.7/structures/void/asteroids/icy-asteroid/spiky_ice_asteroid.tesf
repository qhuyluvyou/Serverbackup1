num randPrecision = 100;

num spikes = 25;

// Direction vector
num dx = (randomInt(randPrecision)/randPrecision);
num dy = randomInt(randPrecision)/randPrecision;
num dz = (randomInt(randPrecision)/randPrecision);


// Normalize vector
num mag = sqrt(pow(dx,2)+pow(dy,2)+pow(dz,2));
dx = dx/mag;
dy = dy/mag;
dz = dz/mag;

num length = 0;
num radius = 0;
for (num i = 0; i < spikes; i = i + 1) {

    length = 20;
    radius = 3;
    dx = dx+1;
    dy = dy+1;
    dz = dz+1;

    mag = sqrt(pow(dx,2)+pow(dy,2)+pow(dz,2));
    dx = dx/mag;
    if (randomInt(2) == 0) dx = dx*-1;
    dy = dy/mag;
    if (randomInt(2) == 0) dy = dy*-1;
    dz = dz/mag;
    if (randomInt(2) == 0) dz = dz*-1;

    for(num l = 0; l <= length; l = l + 1) {

        // Reduce radius inversely to length
        num r = (radius/length * -l) + radius;

        // Generate sphere at each point
        for(num x = -r; x <= r; x = x + 1) {
            for(num y = -r; y <= r; y = y + 1) {
                for(num z = -r; z <= r; z = z + 1) {
                    if (pow(x,2)+pow(y,2)+pow(z,2) < pow(r,2)) {
                        if (l/length < 0.3) {
                            structure(l*dx + x, l*dy + y - radius, l*dz + z, "icy_asteroid_palette", "NONE");
                        }
                        else {
                            block(l*dx + x, l*dy + y - radius, l*dz + z, "minecraft:ice", false);
                        }
                    }
                }
            }
        }
    }
}    