num randPrecision = 100;
num radius = 2;
num warp = 1;
num warpFreq = 2;
num squish = 1+randomInt(randPrecision)/randPrecision;
num radiusSquared = pow(radius,2);
num yTranslate = 1;

num width = 3;

for (num x = -width; x <= width; x = x + 1) {
    for (num y = -5; y < 5; y = y + 1) {
        for (num z = -width; z <= width; z = z + 1) {
            num warpX = warp * sampler("simplex3",
                                warpFreq*(x+originX()),
                                warpFreq*(y+originY()+1000),
                                warpFreq*(z+originZ()));
            num warpY = warp * sampler("simplex3",
                                warpFreq*(x+originX()),
                                warpFreq*(y+originY()+2000),
                                warpFreq*(z+originZ()));
            num warpZ = warp * sampler("simplex3",
                                warpFreq*(x+originX()),
                                warpFreq*(y+originY()+3000),
                                warpFreq*(z+originZ()));
			num distanceSquared = pow(x+warpX,2)+pow((y+warpY)*squish,2)+pow(z+warpZ,2);
            if (distanceSquared < radiusSquared && y > -1) {
				structure(x, y+yTranslate, z, "ruin_ores", "NONE");
            }
            if (y == 0) structure(x,y,z,"ruin_block", "NONE");
        }
    }
}
