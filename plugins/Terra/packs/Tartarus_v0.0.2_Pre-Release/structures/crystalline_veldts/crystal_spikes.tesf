//Big spike
num randPrecision = 100;

num length = 25 + randomInt(randPrecision)*2/randPrecision*5;
num radius = 2 + randomInt(randPrecision)/2/randPrecision*5;
// Direction vector
num dx = 0;
num dy = 1;
num dz = 0;


// Normalize vector
num mag = sqrt(pow(dx,2)+pow(dy,2)+pow(dz,2));
dx = dx/mag;
dy = dy/mag;
dz = dz/mag;

for(num l = 0; l <= length; l = l + 1) {

    // Reduce radius inversely to length
    num r = (radius/length * -l) + radius;

    // Generate sphere at each point
    for(num x = -r; x <= r; x = x + 1) {
        for(num y = -r; y <= r; y = y + 1) {
            for(num z = -r; z <= r; z = z + 1) {
                if (pow(x,2)+pow(y,2)+pow(z,2) < pow(r,2)) {
					if (randomInt(5) == 0) {
						block(l*dx + x, l*dy + y - radius, l*dz + z, "minecraft:budding_amethyst", false);
					}
					else {
						block(l*dx + x, l*dy + y - radius, l*dz + z, "minecraft:amethyst_block", false);
					}
                }
            }
        }
    }
}

//Small spikes surrounding big spike
num spikeAmt = randomInt(6);

for (num loopAmt = 0; loopAmt < spikeAmt; loopAmt = loopAmt + 1) {
	num smolSpikeDeg = randomInt(36) * 10;
	structure(1.8 * radius * cos(smolSpikeDeg), 0, 1.8 * radius * sin(smolSpikeDeg), "crystal_spikes_small", "NONE");
}